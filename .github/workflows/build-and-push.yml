name: Build and Push on Dockerfile Change

on:
  # 触发器1：当 scripts 目录下的 Dockerfile 变化时自动触发
  push:
    branches:
      - main
    paths:
      - "scripts/**/Dockerfile"

  # 触发器2：允许从 GitHub Actions UI 手动触发
  workflow_dispatch:

jobs:
  # 第一个 Job：识别需要构建的服务
  prepare:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.list_services.outputs.services }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: List services with Dockerfiles
        id: list_services
        run: |
          SERVICES=$(find scripts -mindepth 2 -maxdepth 2 -type f -name Dockerfile -printf '%h\n' | cut -d'/' -f2 | jq -Rsc 'split("\n") | map(select(length > 0))')
          echo "services=$SERVICES" >> $GITHUB_OUTPUT

  # 第二个 Job：根据识别出的服务列表，并行构建和推送镜像
  build-and-push:
    needs: prepare
    # 当手动触发 (workflow_dispatch) 或 自动触发且找到服务时，运行此 Job
    if: github.event_name == 'workflow_dispatch' || fromJson(needs.prepare.outputs.services)[0] != null
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # 如果是手动触发，矩阵会使用一个包含所有服务的列表；否则使用 prepare 的输出
        service: ${{ github.event_name == 'workflow_dispatch' && fromJson('["my-first-app", "another-service"]') || fromJson(needs.prepare.outputs.services) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image for ${{ matrix.service }}
        uses: docker/build-push-action@v6
        with:
          context: ./scripts/${{ matrix.service }}
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest
